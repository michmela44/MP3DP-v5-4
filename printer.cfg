###  V1 Engineering MP3DP V5  ###
###                           ###


### BTT Manta M8P, CB1, EBB42   ###

#################################################################################################################

[include mainsail.cfg]
[include K-ShakeTune/*.cfg]
[include config_backup.cfg]

[mcu]
canbus_uuid: 9967027684f2

[mcu EBBCan]
canbus_uuid: 48c5fd27b633

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

###   Printer   ###

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 7000
max_z_velocity: 50
max_z_accel: 1000

##################################################################################################################

### Brakes ###

[multi_pin z_enable]
pins: !PC14, PA3

[idle_timeout]
gcode:

#[output_pin zbrakepin]
#pin: PA3
#value: 0
#shutdown_value: 0

#[delayed_gcode my_delayed_gcode]
#gcode:
#  SET_PIN PIN=zbrakepin VALUE=1
#  set_stepper_enable stepper_z enable=1
#  set_stepper_enable stepper_z1 enable=1
#  set_stepper_enable stepper_z2 enable=1
#initial_duration: 0.01

#[gcode_macro M18]
#rename_existing: M18000
#gcode:
#  M18000
#  SET_PIN PIN=zbrakepin VALUE=0

#[gcode_macro M84]
#rename_existing: M84000
#gcode:
#  M84000
#  SET_PIN PIN=zbrakepin VALUE=0

#[gcode_macro G28]
#rename_existing: G28000
#gcode:
#  SET_PIN PIN=zbrakepin VALUE=1
#  G28000


##################################################################################################################

[gcode_arcs]
resolution: 1

[exclude_object]

###   Stepper Motors   ###

# Motor1
[stepper_x]
step_pin: PE6
dir_pin: !PE5
enable_pin: multi_pin:z_enable
#enable_pin: !PC14
microsteps: 32
rotation_distance: 32
endstop_pin: EBBCan: PB6
position_endstop: -15.3
position_max: 310
position_min: -15.3
homing_speed: 50
second_homing_speed: 3

# Motor2
[stepper_y]
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE4
microsteps: 32
rotation_distance: 32
endstop_pin: ^PF3
position_endstop: 325.5
position_max: 325.5
position_min: -23
homing_speed: 50
second_homing_speed: 3

# Motor3
[stepper_z]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PE0 
microsteps: 16
rotation_distance: 32
endstop_pin: probe:z_virtual_endstop
#position_endstop: -5
position_max: 285
position_min: -5.0
homing_speed: 25
second_homing_speed: 10
homing_retract_dist: 5


# Motor4
[stepper_z1]
step_pin: PB4
dir_pin: PB3
enable_pin: !PB6
microsteps: 16
rotation_distance: 32

# Motor5
[stepper_z2]
step_pin: PG13
dir_pin: !PG12
enable_pin: !PG15
microsteps: 16
rotation_distance: 32

# Extruder
[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 3.53
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan: PA3
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250
max_extrude_cross_section: 250
max_extrude_only_distance: 250

######################################################################################################################

# Motor1
[tmc2209 stepper_x]
uart_pin: PC13
interpolate: False
run_current: 1
hold_current: 0.8
stealthchop_threshold: 0

# Motor2
[tmc2209 stepper_y]
uart_pin: PE3
interpolate: False
run_current: 1
hold_current: 0.8
stealthchop_threshold: 0

# Motor3
[tmc2209 stepper_z]
uart_pin: PB9
#diag_pin: PF2
interpolate: False
run_current: 1.00
hold_current: 0.6
stealthchop_threshold: 99999

# Motor4
[tmc2209 stepper_z1]
uart_pin: PB5
#diag_pin: PF1
interpolate: False
run_current: 1.00
hold_current: 0.6
stealthchop_threshold: 99999

# Motor5
[tmc2209 stepper_z2]
uart_pin: PG14
interpolate: False
run_current: 1.00
hold_current: 0.6
stealthchop_threshold: 99999

[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: False
run_current: 0.8


######################################################################################################################

###   Probe   ###

[output_pin probe_enable]
pin: EBBCan: PB9
value: 0

[gcode_macro Probe_Deploy]
gcode:
	SET_PIN PIN=probe_enable VALUE=1

[gcode_macro Probe_Stow]
gcode:
	SET_PIN PIN=probe_enable VALUE=0
	
[probe]
pin: ^!EBBCan: PB8
deactivate_on_each_sample: False
x_offset: 7
y_offset: -24
#z_offset: 1
speed: 5
activate_gcode:
	Probe_Deploy
	G4 P500  #Allow 500 milliseconds for the probe to deploy
deactivate_gcode:
	Probe_Stow

######################################################################################################################

###   Bed Leveling   ###

[z_tilt]
z_positions: 345, 37.5
             -21, 37.5             
             152, 355
points:      280, 37.5
               0, 37.5
             152, 315
speed: 250
horizontal_move_z: 5
retries: 8
retry_tolerance: 0.02

[bed_mesh]
speed: 125
horizontal_move_z: 5
mesh_min:   15, 15
mesh_max: 270,290
probe_count: 5, 5
algorithm: bicubic
bicubic_tension: 0.2
fade_start: 1
fade_end: 10
fade_target: 0

[skew_correction] 

############################################################################################################################

###   Heated Bed   ###

[heater_bed]
heater_pin: PA1
sensor_type: ATC Semitec 104GT-2
sensor_pin: PB1
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130
max_power: 0.8 

######################################################################################################################

###   Filament Sensor   ###

[filament_switch_sensor filament_switch_sensor]
switch_pin: ^PF0
pause_on_runout: false
runout_gcode: PAUSE

[filament_motion_sensor filament_motion_sensor]
switch_pin: ^PC15
detection_length: 4
extruder: extruder
pause_on_runout: false
runout_gcode: PAUSE

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_motion_sensor ENABLE=0

##########################################################################################################################

###   Fan's   ###

[fan]
pin: EBBCan: PA0

[heater_fan hotend_fan]
pin: EBBCan: PA1
heater: extruder
heater_temp: 50.0

#[controller_fan tmc_fan]
#pin: PF7
#stepper: stepper_x

#######################################################################################################################

###   ADXL345   ###

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,-y,-z

[resonance_tester]
accel_chip: adxl345
probe_points:
    148, 150.5, 50

[input_shaper] # use klippain tool
shaper_freq_x: 108.8
shaper_freq_y: 55.2
shaper_type_x: ei
shaper_type_y: mzv
damping_ratio_x: 0.028
damping_ratio_y: 0.044

#############################################################################################################################

### chamber Lights ###

[neopixel my_neopixel]
pin: PD15
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count:30
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
#   See the "led" section for information on these parameters.

#############################################################################################################################


###   Z Safe Home   ###

[safe_z_home]
home_xy_position: 152, 315
speed: 150
#z_hop: 2
#z_hop_speed: 20

#############################################################################################################################

[temperature_sensor Manta_M8P_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor EBB_Temperature]
sensor_type: temperature_mcu
sensor_mcu: EBBCan

[temperature_sensor CB1_Temperature]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[firmware_retraction]
retract_length: 0.3
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 30
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 30
#   The speed of unretraction, in mm/s. The default is 10 mm/s.


[gcode_macro Z_TILT_ADJUST]
rename_existing: Z_TILT_ADJUST_1
gcode:
  {% if printer["gcode_macro status_leveling"] != null %}
    status_leveling
  {% endif %}
    Z_TILT_ADJUST_1 { rawparams }
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}

[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
  #{% set BED_TEMP = BED_TEMP + 5|float %}
  
  G90 ; use absolute coordinates

  {% if printer[printer.toolhead.extruder].target|float < 150 %}
       M104 S170 ; set final nozzle temp
  {% endif %}

  
  # Start bed heating (but don't wait for it)
  #M140 S{BED_TEMP} ; set final bed temp

  M190 S{BED_TEMP} ; wait for bed temp to stabilize
  
  G28 ; home all axis
  Z_TILT_ADJUST
  #PROBE_OUT
  BED_MESH_CALIBRATE PROFILE=adaptive ADAPTIVE=1 
  #PROBE_IN
  G1 Z50 F1000
  #G1 X2.0 Y10 F3000
  M104 S{EXTRUDER_TEMP} ; set final nozzle temp
  M190 S{BED_TEMP} ; wait for bed temp to stabilize
  M109 S{EXTRUDER_TEMP} ; wait for nozzle temp to stabilize
  
  SKEW_PROFILE LOAD=calilantern_skew_profile
  SET_FILAMENT_SENSOR SENSOR=filament_motion_sensor ENABLE=1
  _ADAPTIVE_PURGE

[gcode_macro END_PRINT]
variable_machine_depth: 285
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    SET_SKEW CLEAR=1
    SET_FILAMENT_SENSOR SENSOR=filament_motion_sensor ENABLE=0
    # Relative positionning
    G91
    # Retract and raise Z
    G1 Z0.2 E-4 F3000
    # Wipe out
    G1 X5 Y5 F3000
    # Raise Z more
    G1 Z10
    # Absolute positionning
    G90
    # Present print
    G1 X0 Y{machine_depth}
    # Disable steppers
    M84

[gcode_macro _ADAPTIVE_PURGE]
description: A purge macro that adapts to be near your actual printed objects

variable_adaptive_enable: True      # Change to False if you'd like the purge to be in the same spot every print
variable_z_height: 0.4              # Height above the bed to purge
variable_tip_distance: 10           # Distance between filament tip and nozzle before purge (this will require some tuning)
variable_purge_amount: 20           # Amount of filament to purge
variable_flow_rate: 10              # Desired flow rate in mm3/s
variable_x_default: 5              # X location to purge, overwritten if adaptive is True
variable_y_default: 5              # Y location to purge, overwritten if adaptive is True
variable_size: 10                   # Size of the logo
variable_distance_to_object_x: 5   # Distance in x to the print area
variable_distance_to_object_y: 5   # Distance in y to the print area

gcode:
    {% if adaptive_enable == True %}
        {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
        {% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
        {% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
        {% set x_origin = ([x_origin, 0] | max) %}
        {% set y_origin = ([y_origin, 0] | max) %}
        
         {% if x_origin < x_default %}
            set x_origin = x_default | float
         {% endif %}
         
         {% if y_origin < y_default %}
            set y_origin = y_default | float
         {% endif %}

    {% else %}
        {% set x_origin = x_default | float %}
        {% set y_origin = y_default | float %}
    {% endif %}
    
  
    {% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
    {% set prepurge_speed = flow_rate / 2.405 %}
    {% set travel_speed = printer.toolhead.max_velocity %}
    { action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }

    G92 E0
    G0 F3000                                                               # Set travel speed
    G90                                                                                 # Absolute positioning
    G0 X{x_origin} Y{y_origin+size/2}                                                   # Move to purge position
    G0 Z{z_height}                                                                      # Move to purge Z height
    M83                                                                                 # Relative extrusion mode
    G1 E{tip_distance} F{prepurge_speed*60}                                             # Move tip of filament to nozzle
    G1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60} # Purge first line of logo
    G1 E-.5 F2100                                                                       # Retract
    G0 Z{z_height*2}                                                                    # Z hop
    G0 X{x_origin+size*0.789} Y{y_origin+size}                                          # Move to second purge line origin
    G0 Z{z_height}                                                                      # Move to purge Z height
    G1 E.5 F2100                                                                        # Recover
    G1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}      # Purge second line of logo
    G1 E-.5 F2100                                                                       # Retract
    G0 Z{z_height*2}                                                                    # Z hop
    G0 X{x_origin+size*0.711} Y{y_origin}                                               # Move to third purge line origin
    G0 Z{z_height}                                                                      # Move to purge Z height
    G1 E.5 F2100                                                                        # Recover
    G1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}    # Purge third line of logo
    G1 E-.5 F2100                                                                       # Retract
    G92 E0                                                                              # Reset extruder distance
    M82                                                                                 # Absolute extrusion mode
    G0 Z{z_height*2}                                                                    # Z hop
    {% if printer["gcode_macro status_printing"] != null %}
        status_printing
    {% endif %}

[gcode_macro TEST_SPEED]
gcode:
    G0 Z10
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G0 Z10
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} #ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 57.791
#*# pid_ki = 0.424
#*# pid_kd = 1967.789
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 16.649
#*# pid_ki = 0.613
#*# pid_kd = 113.002
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.011497, -0.061497, -0.081497, -0.131497, -0.061497
#*# 	0.118503, 0.028503, -0.031497, -0.121497, -0.101497
#*# 	0.158503, 0.058503, -0.011497, -0.131497, -0.101497
#*# 	0.178503, 0.108503, 0.038503, -0.091497, -0.091497
#*# 	0.208503, 0.138503, -0.001497, -0.111497, -0.091497
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 270.0
#*# min_y = 15.0
#*# max_y = 290.0
#*#
#*# [probe]
#*# z_offset = 0.440
#*#
#*# [bed_mesh adaptive]
#*# version = 1
#*# points =
#*# 	-0.037517, -0.027517, 0.012483, -0.057517, -0.037517
#*# 	0.102483, 0.092483, 0.052483, -0.057517, -0.067517
#*# 	0.162483, 0.122483, 0.052483, -0.057517, -0.047517
#*# 	0.182483, 0.122483, 0.072483, -0.027517, -0.047517
#*# 	0.122483, 0.082483, 0.002483, -0.117517, -0.077517
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 270.0
#*# min_y = 15.0
#*# max_y = 290.0
#*#
#*# [skew_correction calilantern_skew_profile]
#*# xy_skew = 0.0022415395342856564
#*# xz_skew = 0.0015697892926368633
#*# yz_skew = -0.000367714162006348
